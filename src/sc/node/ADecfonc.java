/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ADecfonc extends PDecfonc
{
    private PTypeop _typeop_;
    private TId _id_;
    private TPo _po_;
    private PListedecvar _premier_;
    private TPf _pf_;
    private PListedecvar _second_;
    private PBlocinst _blocinst_;

    public ADecfonc()
    {
        // Constructor
    }

    public ADecfonc(
        @SuppressWarnings("hiding") PTypeop _typeop_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TPo _po_,
        @SuppressWarnings("hiding") PListedecvar _premier_,
        @SuppressWarnings("hiding") TPf _pf_,
        @SuppressWarnings("hiding") PListedecvar _second_,
        @SuppressWarnings("hiding") PBlocinst _blocinst_)
    {
        // Constructor
        setTypeop(_typeop_);

        setId(_id_);

        setPo(_po_);

        setPremier(_premier_);

        setPf(_pf_);

        setSecond(_second_);

        setBlocinst(_blocinst_);

    }

    @Override
    public Object clone()
    {
        return new ADecfonc(
            cloneNode(this._typeop_),
            cloneNode(this._id_),
            cloneNode(this._po_),
            cloneNode(this._premier_),
            cloneNode(this._pf_),
            cloneNode(this._second_),
            cloneNode(this._blocinst_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecfonc(this);
    }

    public PTypeop getTypeop()
    {
        return this._typeop_;
    }

    public void setTypeop(PTypeop node)
    {
        if(this._typeop_ != null)
        {
            this._typeop_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._typeop_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TPo getPo()
    {
        return this._po_;
    }

    public void setPo(TPo node)
    {
        if(this._po_ != null)
        {
            this._po_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._po_ = node;
    }

    public PListedecvar getPremier()
    {
        return this._premier_;
    }

    public void setPremier(PListedecvar node)
    {
        if(this._premier_ != null)
        {
            this._premier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._premier_ = node;
    }

    public TPf getPf()
    {
        return this._pf_;
    }

    public void setPf(TPf node)
    {
        if(this._pf_ != null)
        {
            this._pf_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pf_ = node;
    }

    public PListedecvar getSecond()
    {
        return this._second_;
    }

    public void setSecond(PListedecvar node)
    {
        if(this._second_ != null)
        {
            this._second_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._second_ = node;
    }

    public PBlocinst getBlocinst()
    {
        return this._blocinst_;
    }

    public void setBlocinst(PBlocinst node)
    {
        if(this._blocinst_ != null)
        {
            this._blocinst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._blocinst_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._typeop_)
            + toString(this._id_)
            + toString(this._po_)
            + toString(this._premier_)
            + toString(this._pf_)
            + toString(this._second_)
            + toString(this._blocinst_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._typeop_ == child)
        {
            this._typeop_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._po_ == child)
        {
            this._po_ = null;
            return;
        }

        if(this._premier_ == child)
        {
            this._premier_ = null;
            return;
        }

        if(this._pf_ == child)
        {
            this._pf_ = null;
            return;
        }

        if(this._second_ == child)
        {
            this._second_ = null;
            return;
        }

        if(this._blocinst_ == child)
        {
            this._blocinst_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._typeop_ == oldChild)
        {
            setTypeop((PTypeop) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._po_ == oldChild)
        {
            setPo((TPo) newChild);
            return;
        }

        if(this._premier_ == oldChild)
        {
            setPremier((PListedecvar) newChild);
            return;
        }

        if(this._pf_ == oldChild)
        {
            setPf((TPf) newChild);
            return;
        }

        if(this._second_ == oldChild)
        {
            setSecond((PListedecvar) newChild);
            return;
        }

        if(this._blocinst_ == oldChild)
        {
            setBlocinst((PBlocinst) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
