/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.analysis;

import sc.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgramme(AProgramme node);
    void caseADecvarListedecvar(ADecvarListedecvar node);
    void caseAVideListedecvar(AVideListedecvar node);
    void caseAListdecvarListedecvarbis(AListdecvarListedecvarbis node);
    void caseAVideListedecvarbis(AVideListedecvarbis node);
    void caseAVarDecvar(AVarDecvar node);
    void caseAFoncDecvar(AFoncDecvar node);
    void caseAEntierTypevar(AEntierTypevar node);
    void caseABooleanTypevar(ABooleanTypevar node);
    void caseADecfoncListedecfonc(ADecfoncListedecfonc node);
    void caseAVideListedecfonc(AVideListedecfonc node);
    void caseADecfonc(ADecfonc node);
    void caseATypeopTypeop(ATypeopTypeop node);
    void caseAVideTypeop(AVideTypeop node);
    void caseABlocinst(ABlocinst node);
    void caseAListinstListeinst(AListinstListeinst node);
    void caseAVideListeinst(AVideListeinst node);
    void caseAInstInst(AInstInst node);
    void caseATanqueInst(ATanqueInst node);
    void caseASiInst(ASiInst node);
    void caseASisinonInst(ASisinonInst node);
    void caseARetournInst(ARetournInst node);
    void caseAAppfoncInst(AAppfoncInst node);
    void caseAEcrireInst(AEcrireInst node);
    void caseAListexpListeexp(AListexpListeexp node);
    void caseAVideListeexp(AVideListeexp node);
    void caseAListexpbisListeexpbis(AListexpbisListeexpbis node);
    void caseAVideListeexpbis(AVideListeexpbis node);
    void caseAOuExp(AOuExp node);
    void caseAExp2Exp(AExp2Exp node);
    void caseAEtExp2(AEtExp2 node);
    void caseAExp3Exp2(AExp3Exp2 node);
    void caseAEgaleExp3(AEgaleExp3 node);
    void caseAInfExp3(AInfExp3 node);
    void caseAExp4Exp3(AExp4Exp3 node);
    void caseAPlusExp4(APlusExp4 node);
    void caseAMoinsExp4(AMoinsExp4 node);
    void caseAExp5Exp4(AExp5Exp4 node);
    void caseADivExp5(ADivExp5 node);
    void caseAMultExp5(AMultExp5 node);
    void caseAExp6Exp5(AExp6Exp5 node);
    void caseANonExp6(ANonExp6 node);
    void caseAExp7Exp6(AExp7Exp6 node);
    void caseAExpbExp7(AExpbExp7 node);
    void caseAVarExp7(AVarExp7 node);
    void caseANombreExp7(ANombreExp7 node);
    void caseAAppelfoncExp7(AAppelfoncExp7 node);
    void caseALireExp7(ALireExp7 node);
    void caseAVraiExp7(AVraiExp7 node);
    void caseAFauxExp7(AFauxExp7 node);
    void caseAIdVar(AIdVar node);
    void caseAIdbVar(AIdbVar node);

    void caseTEspaces(TEspaces node);
    void caseTCommentaire(TCommentaire node);
    void caseTVirgule(TVirgule node);
    void caseTNombre(TNombre node);
    void caseTCo(TCo node);
    void caseTCf(TCf node);
    void caseTPo(TPo node);
    void caseTPf(TPf node);
    void caseTAco(TAco node);
    void caseTAcf(TAcf node);
    void caseTPvirgule(TPvirgule node);
    void caseTTantque(TTantque node);
    void caseTFaire(TFaire node);
    void caseTSi(TSi node);
    void caseTAlors(TAlors node);
    void caseTSinon(TSinon node);
    void caseTRetourne(TRetourne node);
    void caseTEcrire(TEcrire node);
    void caseTOu(TOu node);
    void caseTEt(TEt node);
    void caseTLire(TLire node);
    void caseTVrai(TVrai node);
    void caseTFaux(TFaux node);
    void caseTEgale(TEgale node);
    void caseTInf(TInf node);
    void caseTPlus(TPlus node);
    void caseTMoins(TMoins node);
    void caseTDiv(TDiv node);
    void caseTMult(TMult node);
    void caseTNon(TNon node);
    void caseTEntier(TEntier node);
    void caseTBoolean(TBoolean node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
